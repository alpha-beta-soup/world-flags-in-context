(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var each=require("turf-meta").coordEach,point=require("turf-point");module.exports=function(r){var e=0,t=0,o=0;return each(r,function(r){e+=r[0],t+=r[1],o++},!0),point([e/o,t/o])};

},{"turf-meta":2,"turf-point":3}],2:[function(require,module,exports){
function coordEach(e,o,t){var r,n,p,c,u,i,f,a,s,y=0,g="FeatureCollection"===e.type,h="Feature"===e.type,d=g?e.features.length:1;for(r=0;d>r;r++)for(a=g?e.features[r].geometry:h?e.geometry:e,s="GeometryCollection"===a.type,i=s?a.geometries.length:1,c=0;i>c;c++)if(u=s?a.geometries[c]:a,f=u.coordinates,y=!t||"Polygon"!==u.type&&"MultiPolygon"!==u.type?0:1,"Point"===u.type)o(f);else if("LineString"===u.type||"MultiPoint"===u.type)for(n=0;n<f.length;n++)o(f[n]);else if("Polygon"===u.type||"MultiLineString"===u.type)for(n=0;n<f.length;n++)for(p=0;p<f[n].length-y;p++)o(f[n][p]);else{if("MultiPolygon"!==u.type)throw new Error("Unknown Geometry Type");for(n=0;n<f.length;n++)for(p=0;p<f[n].length;p++)for(l=0;l<f[n][p].length-y;l++)o(f[n][p][l])}}function coordReduce(e,o,t,r){return coordEach(e,function(e){t=o(t,e)},r),t}function propEach(e,o){var t;switch(e.type){case"FeatureCollection":for(features=e.features,t=0;t<e.features.length;t++)o(e.features[t].properties);break;case"Feature":o(e.properties)}}function propReduce(e,o,t){return propEach(e,function(e){t=o(t,e)}),t}module.exports.coordEach=coordEach,module.exports.coordReduce=coordReduce,module.exports.propEach=propEach,module.exports.propReduce=propReduce;

},{}],3:[function(require,module,exports){
var isArray=Array.isArray||function(r){return"[object Array]"===Object.prototype.toString.call(r)};module.exports=function(r,t){if(!isArray(r))throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");return{type:"Feature",geometry:{type:"Point",coordinates:r},properties:t||{}}};

},{}],4:[function(require,module,exports){
module.exports={centroid:require("turf-centroid")};
},{"turf-centroid":1}]},{},[4])(4)
});